
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}


model Token {
  id                String  @id @default(cuid())
  token      String    @unique
  createdAt  DateTime  @default(now())
  expiresAt  DateTime
  userId     String
  User       User      @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Alternatif {
  id                String  @id @default(cuid())
  nama        String
  deskripsi   String?
  createdAt   DateTime     @default(now())
  Penilaians  Penilaian[]
}

model DetailKriteria {
  id                String  @id @default(cuid())
  id_kriteria       String
  deskripsi         String
  nilai             Float
  createdAt         DateTime    @default(now())
  Kriteria          Kriteria    @relation(fields: [id_kriteria], references: [id])
  Penilaians        Penilaian[]
}

model Hasil {
  id                String  @id @default(cuid())
  id_penilaian   String
  ranking        Int
  nilai          Float
  userId         String
  Penilaian      Penilaian @relation(fields: [id_penilaian], references: [id])
  User           User      @relation(fields: [userId], references: [id])
}

model Kriteria {
  id                String  @id @default(cuid())
  nama            String
  bobot           Float
  DetailKriterias DetailKriteria[]
}

model Penilaian {
  id                String  @id @default(cuid())
  id_detail_kriteria  String
  id_alternatif       String
  Hasils              Hasil[]
  Alternatif          Alternatif      @relation(fields: [id_alternatif], references: [id])
  DetailKriteria      DetailKriteria  @relation(fields: [id_detail_kriteria], references: [id])
}

model User {
  id                String  @id @default(cuid())
  name      String?
  password  String
  email     String   @unique
  image     String?
  createdAt DateTime  @default(now())
  Token     Token[]
  Hasils    Hasil[]
}
